name: Playwright Tests with Allure + GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.38.1-focal

    timeout-minutes: 30
    outputs:
      report-path: ${{ steps.export-report.outputs.report-path }}
      run-id: ${{ github.run_id }}

    steps:
      # 1. RÃ©cupÃ©rer le code du repo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Installer Java (nÃ©cessaire pour Allure)
      - name: Install Java (required for Allure)
        run: |
          apt-get update -y
          apt-get install -y default-jdk
          echo "JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))" >> $GITHUB_ENV

      # 3. Installer les dÃ©pendances Node + Allure CLI
      - name: Install dependencies
        run: |
          npm ci
          npm install -g allure-commandline --save-dev
          npx playwright install --with-deps

      # 4. Lancer les tests avec 2 workers (continue mÃªme en cas d'Ã©chec)
      - name: Run Playwright tests (with 2 workers)
        run: npx playwright test --workers=2
        continue-on-error: true

      # 5. GÃ©nÃ©rer le rapport Allure (toujours exÃ©cutÃ©)
      - name: Generate Allure report
        if: always()
        run: |
          allure generate ./allure-results --clean -o ./allure-report

      # 6. Exporter le chemin du rapport
      - name: Export report path
        if: always()
        id: export-report
        run: echo "report-path=allure-report" >> $GITHUB_OUTPUT

      # 7. Upload du rapport en tant qu'artifact
      - name: Upload Allure report as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: ./allure-report

  deploy-report:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Allure report artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: ./allure-report

      - name: Copy custom index.html to gh-pages
        run: cp ./index.html ./allure-report/index.html

      - name: Deploy to GitHub Pages (versioned)
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./allure-report
          destination_dir: allure-reports/${{ needs.test.outputs.run-id }}
          keep_files: true

      - name: Deploy to GitHub Pages (latest)
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./allure-report
          destination_dir: allure-reports/latest
          keep_files: true

      - name: Add Allure report link to summary
        run: |
          echo "ðŸ“Š [Voir le rapport Allure (latest)](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/allure-reports/latest/)" >> $GITHUB_STEP_SUMMARY