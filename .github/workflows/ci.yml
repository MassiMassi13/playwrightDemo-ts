name: Playwright Tests with Allure + GitHub Pages

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.38.1-focal

    steps:
      # 📥 Récupère le code source
      - name: Checkout code
        uses: actions/checkout@v3

      # ☕ Installe Java pour Allure
      - name: Install Java (required for Allure)
        run: |
          apt-get update -y
          apt-get install -y default-jdk
          echo "JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))" >> $GITHUB_ENV

      # 📦 Installe les dépendances projet + Allure CLI
      - name: Install dependencies
        run: |
          npm ci
          npm install -g allure-commandline --save-dev
          npx playwright install --with-deps

      # ▶️ Lance les tests Playwright
      - name: Run Playwright tests
        run: npx playwright test --workers=2
        continue-on-error: true

      # 🧾 Génère le rapport Allure HTML
      - name: Generate Allure report
        if: always()
        run: |
          allure generate ./allure-results --clean -o ./allure-reports/report

      # 📤 Upload summary.json pour utilisation par le script
      - name: Upload summary.json for index
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: summary-json
          path: ./allure-reports/report/widgets/summary.json

      # 📊 Génère le résumé HTML avec ton script CommonJS
      - name: Generate index.html summary
        if: always()
        run: node generate-index.cjs

      # 📤 Upload le rapport complet
      - name: Upload Allure report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: ./allure-reports/report

      # 📤 Upload le fichier résumé HTML
      - name: Upload summary index.html
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: summary-page
          path: ./public/index.html

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      # 📥 Récupère le code (nécessaire pour que le dépôt existe)
      - name: Checkout repository
        uses: actions/checkout@v3

      # 📦 Récupère les artefacts générés (rapport + page HTML)
      - name: Download Allure report
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: ./public/allure-reports/report

      - name: Download summary page
        uses: actions/download-artifact@v4
        with:
          name: summary-page
          path: ./public

      # 📥 Télécharge summary.json pour que generate-index.cjs fonctionne aussi en CI
      - name: Download summary.json
        uses: actions/download-artifact@v4
        with:
          name: summary-json
          path: ./allure-reports/report/widgets

      # 📊 Re-génère index.html avec les données summary.json (optionnel mais utile si besoin de mise à jour tardive)
      - name: (Optionnel) Regenerate index.html from summary.json
        run: node generate-index.cjs

      # 🚀 Déploie tout sur GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          publish_branch: gh-pages

      # 📝 Ajoute les liens de résumé dans l’onglet "Summary" du workflow
      - name: Add summary links to workflow summary
        run: |
          echo "🏠 [Page d’accueil](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/index.html)" >> $GITHUB_STEP_SUMMARY
          echo "📊 [Voir le rapport Allure](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/allure-reports/report/index.html)" >> $GITHUB_STEP_SUMMARY
