name: Playwright Tests with Allure + GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.38.1-focal

    timeout-minutes: 30
    outputs:
      report-path: ${{ steps.export-report.outputs.report-path }}
      run-id: ${{ github.run_id }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Java (required for Allure)
        run: |
          apt-get update -y
          apt-get install -y default-jdk
          echo "JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          npm ci
          npm install -g allure-commandline --save-dev
          npx playwright install --with-deps

      - name: Run Playwright tests (with 2 workers)
        run: npx playwright test --workers=2
        continue-on-error: true

      - name: Generate Allure report
        if: always()
        run: |
          allure generate ./allure-results --clean -o ./allure-report

      - name: Export report path
        if: always()
        id: export-report
        run: echo "report-path=allure-report" >> $GITHUB_OUTPUT

      - name: Upload Allure report as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: ./allure-report

  deploy-report:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Allure report artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: ./allure-report

      # Copier ta page dâ€™accueil dans un dossier temporaire pour Ã©craser ensuite
      - name: Copy custom landing page
        run: |
          mkdir -p ./allure-report/landing
          cp ./index.html ./allure-report/landing/index.html

      # DÃ©ploiement du rapport Allure
      - name: Deploy Allure report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./allure-report
          destination_dir: allure-reports/latest
          keep_files: true

      # DÃ©ploiement de la page personnalisÃ©e index.html (aprÃ¨s coup)
      - name: Deploy landing page (overwrite index.html)
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./allure-report/landing
          destination_dir: allure-reports/latest
          keep_files: true

      - name: Add Allure report link to summary
        run: |
          echo "ðŸ“Š [Voir le rapport Allure (latest)](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/allure-reports/latest/)" >> $GITHUB_STEP_SUMMARY
